Python 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> str1 = "srikanth"
>>> len(str)
Traceback (most recent call last):
  File "<pyshell#1>", line 1, in <module>
    len(str)
TypeError: object of type 'type' has no len()
>>> len(str1)
8
>>> x = [1,2,3,4,5]
>>> len(x)
5
>>> y = (6,7,8,9,10)
>>> len(y)
5
>>> dict = {"srikanth":20 ,"gopi":21 ,"murali" :22,"kondalu" :23}

>>> len(dict)
4
>>> l=list(str1)
>>> l
['s', 'r', 'i', 'k', 'a', 'n', 't', 'h']
>>> i=list(dict)
>>> i
['srikanth', 'gopi', 'murali', 'kondalu']
>>> x = [3,4,5,6, "naga", (1,2,3), None]
>>> 
>>> 
>>> all(x)
False
>>> x.pop()
>>> x
[3, 4, 5, 6, 'naga', (1, 2, 3)]
>>> all(x)
True
>>> x.extend([])
>>> x
[3, 4, 5, 6, 'naga', (1, 2, 3)]
>>> 
>>> 
>>> 
>>> 
>>> x.append([])
>>> x
[3, 4, 5, 6, 'naga', (1, 2, 3), []]
>>> all(x)
False
>>> any(x)
True
>>> any([0, None, [], (), {}, "", False])
False
>>> any([0, None, [], (), {}, "", False,3])
True
>>> help(compile)
Help on built-in function compile in module builtins:

compile(source, filename, mode, flags=0, dont_inherit=False, optimize=-1, *, _feature_version=-1)
    Compile source into a code object that can be executed by exec() or eval().
    
    The source code may represent a Python module, statement or expression.
    The filename will be used for run-time error messages.
    The mode must be 'exec' to compile a module, 'single' to compile a
    single (interactive) statement, or 'eval' to compile an expression.
    The flags argument, if present, controls which future statements influence
    the compilation of the code.
    The dont_inherit argument, if true, stops the compilation inheriting
    the effects of any future statements in effect in the code calling
    compile; if absent or false these statements do influence the compilation,
    in addition to any features explicitly specified.

>>> compile("import os")
Traceback (most recent call last):
  File "<pyshell#33>", line 1, in <module>
    compile("import os")
TypeError: compile() missing required argument 'filename' (pos 2)
>>> x = "[1,2,3,4,5,6]"
>>> x
'[1,2,3,4,5,6]'
>>> 
>>> list(x)
['[', '1', ',', '2', ',', '3', ',', '4', ',', '5', ',', '6', ']']
>>> y = compile(x)
Traceback (most recent call last):
  File "<pyshell#38>", line 1, in <module>
    y = compile(x)
TypeError: compile() missing required argument 'filename' (pos 2)
>>> y = compile(x, "test")
Traceback (most recent call last):
  File "<pyshell#39>", line 1, in <module>
    y = compile(x, "test")
TypeError: compile() missing required argument 'mode' (pos 3)
>>> y = compile(x, "test", "exec")
>>> y
<code object <module> at 0x00000215E9993030, file "test", line 1>
>>> 
>>> exec(y)
>>> 
>>> 
>>> evaluate(y)
Traceback (most recent call last):
  File "<pyshell#46>", line 1, in <module>
    evaluate(y)
NameError: name 'evaluate' is not defined
>>> x = "a = [1,2,3,4,5,6]"
>>> 
>>> 
>>> y = compile(x, "test", "exec")
>>> 
>>> exec(y)
>>> a
[1, 2, 3, 4, 5, 6]
>>> 
>>> 
>>> 
>>> 
>>> x = [4,2,5,-9,67,45]
>>> 
>>> 

>>> sorted(x)
[-9, 2, 4, 5, 45, 67]
>>> x
[4, 2, 5, -9, 67, 45]
>>> x.sort()
>>> x
[-9, 2, 4, 5, 45, 67]
>>> x
[-9, 2, 4, 5, 45, 67]
>>> callable(list)
True
>>> callable(x)
False
>>> x
[-9, 2, 4, 5, 45, 67]
>>> reversed(x)
<list_reverseiterator object at 0x00000215E995DF40>
>>> list(reversed(x))
[67, 45, 5, 4, 2, -9]
>>> 
>>> 
>>> 
>>> 
>>> 
>>> dir(__builtins__)
['ArithmeticError', 'AssertionError', 'AttributeError', 'BaseException', 'BlockingIOError', 'BrokenPipeError', 'BufferError', 'BytesWarning', 'ChildProcessError', 'ConnectionAbortedError', 'ConnectionError', 'ConnectionRefusedError', 'ConnectionResetError', 'DeprecationWarning', 'EOFError', 'Ellipsis', 'EnvironmentError', 'Exception', 'False', 'FileExistsError', 'FileNotFoundError', 'FloatingPointError', 'FutureWarning', 'GeneratorExit', 'IOError', 'ImportError', 'ImportWarning', 'IndentationError', 'IndexError', 'InterruptedError', 'IsADirectoryError', 'KeyError', 'KeyboardInterrupt', 'LookupError', 'MemoryError', 'ModuleNotFoundError', 'NameError', 'None', 'NotADirectoryError', 'NotImplemented', 'NotImplementedError', 'OSError', 'OverflowError', 'PendingDeprecationWarning', 'PermissionError', 'ProcessLookupError', 'RecursionError', 'ReferenceError', 'ResourceWarning', 'RuntimeError', 'RuntimeWarning', 'StopAsyncIteration', 'StopIteration', 'SyntaxError', 'SyntaxWarning', 'SystemError', 'SystemExit', 'TabError', 'TimeoutError', 'True', 'TypeError', 'UnboundLocalError', 'UnicodeDecodeError', 'UnicodeEncodeError', 'UnicodeError', 'UnicodeTranslateError', 'UnicodeWarning', 'UserWarning', 'ValueError', 'Warning', 'WindowsError', 'ZeroDivisionError', '_', '__build_class__', '__debug__', '__doc__', '__import__', '__loader__', '__name__', '__package__', '__spec__', 'abs', 'all', 'any', 'ascii', 'bin', 'bool', 'breakpoint', 'bytearray', 'bytes', 'callable', 'chr', 'classmethod', 'compile', 'complex', 'copyright', 'credits', 'delattr', 'dict', 'dir', 'divmod', 'enumerate', 'eval', 'exec', 'exit', 'filter', 'float', 'format', 'frozenset', 'getattr', 'globals', 'hasattr', 'hash', 'help', 'hex', 'id', 'input', 'int', 'isinstance', 'issubclass', 'iter', 'len', 'license', 'list', 'locals', 'map', 'max', 'memoryview', 'min', 'next', 'object', 'oct', 'open', 'ord', 'pow', 'print', 'property', 'quit', 'range', 'repr', 'reversed', 'round', 'set', 'setattr', 'slice', 'sorted', 'staticmethod', 'str', 'sum', 'super', 'tuple', 'type', 'vars', 'zip']
>>> 
>>> 
>>> 
>>> 

>>> ascii(67)
'67'
>>> ascii(&)
SyntaxError: invalid syntax
>>> ascii('&')
"'&'"
>>> help(ascii)
Help on built-in function ascii in module builtins:

ascii(obj, /)
    Return an ASCII-only representation of an object.
    
    As repr(), return a string containing a printable representation of an
    object, but escape the non-ASCII characters in the string returned by
    repr() using \\x, \\u or \\U escapes. This generates a string similar
    to that returned by repr() in Python 2.

>>> x = "ఖ + ఈ"
>>> x
'ఖ + ఈ'
>>> ascii(x)
"'\\u0c16 + \\u0c08'"
>>> 
>>> help(breakpoint)
Help on built-in function breakpoint in module builtins:

breakpoint(...)
    breakpoint(*args, **kws)
    
    Call sys.breakpointhook(*args, **kws).  sys.breakpointhook() must accept
    whatever arguments are passed.
    
    By default, this drops you into the pdb debugger.

>>> help(chr)
Help on built-in function chr in module builtins:

chr(i, /)
    Return a Unicode string of one character with ordinal i; 0 <= i <= 0x10ffff.

>>> chr(5)
'\x05'
>>> chr("x")
Traceback (most recent call last):
  File "<pyshell#92>", line 1, in <module>
    chr("x")
TypeError: an integer is required (got type str)
>>> y = ascii(x)
>>> 
>>> y
"'\\u0c16 + \\u0c08'"
>>> chr(y)
Traceback (most recent call last):
  File "<pyshell#96>", line 1, in <module>
    chr(y)
TypeError: an integer is required (got type str)
>>> chr(6)
'\x06'
>>> chr('a')
Traceback (most recent call last):
  File "<pyshell#98>", line 1, in <module>
    chr('a')
TypeError: an integer is required (got type str)
>>> chr(91)
'['
>>> chr(92)
'\\'
>>> chr(81
    )
'Q'
>>> chr(102)
'f'
>>> chr(97)
'a'
>>> chr(41)
')'
>>> help(copyright)
Help on _Printer in module _sitebuiltins object:

class _Printer(builtins.object)
 |  _Printer(name, data, files=(), dirs=())
 |  
 |  interactive prompt objects for printing the license text, a list of
 |  contributors and the copyright notice.
 |  
 |  Methods defined here:
 |  
 |  __call__(self)
 |      Call self as a function.
 |  
 |  __init__(self, name, data, files=(), dirs=())
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  __repr__(self)
 |      Return repr(self).
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)
 |  
 |  ----------------------------------------------------------------------
 |  Data and other attributes defined here:
 |  
 |  MAXLINES = 23

>>> copyright("naga")
Traceback (most recent call last):
  File "<pyshell#107>", line 1, in <module>
    copyright("naga")
TypeError: __call__() takes 1 positional argument but 2 were given
>>> copyright()
Copyright (c) 2001-2020 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.
>>> credit()
Traceback (most recent call last):
  File "<pyshell#109>", line 1, in <module>
    credit()
NameError: name 'credit' is not defined
>>> credits()
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> 
>>> 
>>> 
>>> 
>>> help(divmod)
Help on built-in function divmod in module builtins:

divmod(x, y, /)
    Return the tuple (x//y, x%y).  Invariant: div*y + mod == x.

>>> divmod(5,2)
(2, 1)
>>> x
'ఖ + ఈ'
>>> a
[1, 2, 3, 4, 5, 6]
>>> 
>>> 
>>> enumerate(x)
<enumerate object at 0x00000215E9952D00>
>>> list(enumerate(x))
[(0, 'ఖ'), (1, ' '), (2, '+'), (3, ' '), (4, 'ఈ')]
>>> a
[1, 2, 3, 4, 5, 6]
>>> 
>>> 
>>> for i, j in enumerate(a):
	print(i, j)

	
0 1
1 2
2 3
3 4
4 5
5 6
>>> for i, j in enumerate("nageswara rao"):
	print(i, j)

	
0 n
1 a
2 g
3 e
4 s
5 w
6 a
7 r
8 a
9  
10 r
11 a
12 o
>>> eval("2+5")
7
>>> "2+5"
'2+5'
>>> a = 5
>>> b = 10
>>> eval("a + b")
15
>>> x = "[1,2,3]"
>>> x
'[1,2,3]'
>>> list(x)
['[', '1', ',', '2', ',', '3', ']']
>>> eval(x)
[1, 2, 3]
>>> x
'[1,2,3]'
>>> for i in x:
	print(i)

	
[
1
,
2
,
3
]
>>> a = list(x)
>>> 
>>> a
['[', '1', ',', '2', ',', '3', ']']
>>> for i in a:
	print(i)

	
[
1
,
2
,
3
]
>>> b = eval(x)
>>> for i in b:
	print(i)

	
1
2
3
>>> b
[1, 2, 3]
>>> x = "nageswara"
>>> list(x)
['n', 'a', 'g', 'e', 's', 'w', 'a', 'r', 'a']
>>> a
['[', '1', ',', '2', ',', '3', ']']
>>> x
'nageswara'
>>> help(exec)
Help on built-in function exec in module builtins:

exec(source, globals=None, locals=None, /)
    Execute the given source in the context of globals and locals.
    
    The source may be a string representing one or more Python statements
    or a code object as returned by compile().
    The globals must be a dictionary and locals can be any mapping,
    defaulting to the current globals and locals.
    If only globals is given, locals defaults to it.

>>> exec("2 + 5")
>>> exec("2 + 5")
>>> os
Traceback (most recent call last):
  File "<pyshell#162>", line 1, in <module>
    os
NameError: name 'os' is not defined
>>> exec("import os")
>>> os
<module 'os' from 'C:\\Users\\sRIKANTH\\AppData\\Local\\Programs\\Python\\Python39\\lib\\os.py'>
>>> globals()
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, 'str1': 'srikanth', 'x': 'nageswara', 'y': "'\\u0c16 + \\u0c08'", 'dict': {'srikanth': 20, 'gopi': 21, 'murali': 22, 'kondalu': 23}, 'l': ['s', 'r', 'i', 'k', 'a', 'n', 't', 'h'], 'i': 3, 'a': ['[', '1', ',', '2', ',', '3', ']'], 'j': 'o', 'b': [1, 2, 3], 'os': <module 'os' from 'C:\\Users\\sRIKANTH\\AppData\\Local\\Programs\\Python\\Python39\\lib\\os.py'>}
>>> locals()
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, 'str1': 'srikanth', 'x': 'nageswara', 'y': "'\\u0c16 + \\u0c08'", 'dict': {'srikanth': 20, 'gopi': 21, 'murali': 22, 'kondalu': 23}, 'l': ['s', 'r', 'i', 'k', 'a', 'n', 't', 'h'], 'i': 3, 'a': ['[', '1', ',', '2', ',', '3', ']'], 'j': 'o', 'b': [1, 2, 3], 'os': <module 'os' from 'C:\\Users\\sRIKANTH\\AppData\\Local\\Programs\\Python\\Python39\\lib\\os.py'>}
>>> 
>>> 
>>> 
>>> 
>>> bin(5)
'0b101'
>>> hex(5)
'0x5'
>>> oct(5)
'0o5'
>>> isinstance(5, int)
True
>>> isinstance(5, float)
False
>>> ord('a')
97
>>> chr(97)
'a'
>>> ord('a')
97
>>> ord(97)
Traceback (most recent call last):
  File "<pyshell#179>", line 1, in <module>
    ord(97)
TypeError: ord() expected string of length 1, but int found
>>> ord('97')
Traceback (most recent call last):
  File "<pyshell#180>", line 1, in <module>
    ord('97')
TypeError: ord() expected a character, but string of length 2 found
>>> ord('9')
57
>>> chr(57)
'9'
\
>>> pow(5)
Traceback (most recent call last):
  File "<pyshell#183>", line 1, in <module>
    pow(5)
TypeError: pow() missing required argument 'exp' (pos 2)
>>> pow(5,6)
15625
>>> 
>>> 
>>> 
>>> 
>>> zip("naaga", "sri")
<zip object at 0x00000215E7B16180>
>>> list(zip("naaga", "sri"))
[('n', 's'), ('a', 'r'), ('a', 'i')]
>>> 
>>> 
>>> 
>>> 
>>> dir(__builtins__)
['ArithmeticError', 'AssertionError', 'AttributeError', 'BaseException', 'BlockingIOError', 'BrokenPipeError', 'BufferError', 'BytesWarning', 'ChildProcessError', 'ConnectionAbortedError', 'ConnectionError', 'ConnectionRefusedError', 'ConnectionResetError', 'DeprecationWarning', 'EOFError', 'Ellipsis', 'EnvironmentError', 'Exception', 'False', 'FileExistsError', 'FileNotFoundError', 'FloatingPointError', 'FutureWarning', 'GeneratorExit', 'IOError', 'ImportError', 'ImportWarning', 'IndentationError', 'IndexError', 'InterruptedError', 'IsADirectoryError', 'KeyError', 'KeyboardInterrupt', 'LookupError', 'MemoryError', 'ModuleNotFoundError', 'NameError', 'None', 'NotADirectoryError', 'NotImplemented', 'NotImplementedError', 'OSError', 'OverflowError', 'PendingDeprecationWarning', 'PermissionError', 'ProcessLookupError', 'RecursionError', 'ReferenceError', 'ResourceWarning', 'RuntimeError', 'RuntimeWarning', 'StopAsyncIteration', 'StopIteration', 'SyntaxError', 'SyntaxWarning', 'SystemError', 'SystemExit', 'TabError', 'TimeoutError', 'True', 'TypeError', 'UnboundLocalError', 'UnicodeDecodeError', 'UnicodeEncodeError', 'UnicodeError', 'UnicodeTranslateError', 'UnicodeWarning', 'UserWarning', 'ValueError', 'Warning', 'WindowsError', 'ZeroDivisionError', '_', '__build_class__', '__debug__', '__doc__', '__import__', '__loader__', '__name__', '__package__', '__spec__', 'abs', 'all', 'any', 'ascii', 'bin', 'bool', 'breakpoint', 'bytearray', 'bytes', 'callable', 'chr', 'classmethod', 'compile', 'complex', 'copyright', 'credits', 'delattr', 'dict', 'dir', 'divmod', 'enumerate', 'eval', 'exec', 'exit', 'filter', 'float', 'format', 'frozenset', 'getattr', 'globals', 'hasattr', 'hash', 'help', 'hex', 'id', 'input', 'int', 'isinstance', 'issubclass', 'iter', 'len', 'license', 'list', 'locals', 'map', 'max', 'memoryview', 'min', 'next', 'object', 'oct', 'open', 'ord', 'pow', 'print', 'property', 'quit', 'range', 'repr', 'reversed', 'round', 'set', 'setattr', 'slice', 'sorted', 'staticmethod', 'str', 'sum', 'super', 'tuple', 'type', 'vars', 'zip']
>>> 